{"version":3,"sources":["../src/CoreChart.js"],"names":["ChartEngine","require","Highcharts","materialStyle","Metrics","DateFilters","FieldFilters","exportCharts","module","exports","endpoint","params","type","httpHeaders","prams","checkFilters","setDefaultParams","setMetrics","setExport","filters","undefined","dateFilters","fieldFilters","fields","head","document","querySelector","materialStyleElement","fieldsStyleElement","datesStyleElement","innerHTML","getStyle","name","args","controller","render","dom","elApp","app","classList","add","getDomElements","setAttribute","angular","bootstrap","setStyle","defaultParams","credits","enabled","title","text","subtitle","xAxis","categories","yAxis","ytitle","labels","tooltip","legend","layout","align","verticalAlign","plotOptions","dataLabels","metric","formatter","series","chart","formatData","result","finalData","data","self","$scope","$http","getVariables","dataToSend","getParams","key","get","headers","then","buildChart","getResult","getDefaultParams"],"mappings":"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","file":"CoreChart.js","sourcesContent":["const ChartEngine = require('./App');\nconst Highcharts = require('highcharts');\nconst materialStyle = require('./styles/material');\n\n//Metrics\nconst Metrics = require('./services/metrics');\n\n//Filters\nconst DateFilters = require('./services/filters/dates');\nconst FieldFilters = require('./services/filters/fields');\nlet exportCharts = false;\n\nmodule.exports = class CoreChart{\n    constructor(endpoint, params, type){\n        this.endpoint = endpoint;\n        this.params = params;\n        this.httpHeaders = prams.httpHeaders ? params.httpHeaders : {};\n        this.type = type;\n        this.checkFilters();\n        this.setDefaultParams();\n        this.setMetrics();\n        this.setExport();\n    }\n\n    setExport(){\n        if(exportCharts === false){\n            require('highcharts-exporting')(Highcharts);\n            require('highcharts-export-csv')(Highcharts);\n            exportCharts = true;\n        }\n    }\n\n    checkFilters(){\n        if(this.params.filters === undefined)\n            this.params.filters = {};\n\n        this.dateFilters = new DateFilters(this.params.filters.dateFilters);\n        this.fieldFilters = new FieldFilters(this.params.filters.fields);\n    }\n\n    setStyle(){\n        let head = document.querySelector('head');\n        let materialStyleElement = document.querySelector('#materialDesignStyle');\n        let fieldsStyleElement = document.querySelector('#fieldsStyle');\n        let datesStyleElement = document.querySelector('#dateFiltersStyle');\n        head.innerHTML += materialStyleElement == null ? `<style id=\"materialDesignStyle\" >${materialStyle}</style>` : '';\n        head.innerHTML += datesStyleElement == null ? this.dateFilters.getStyle() : '';\n        head.innerHTML += fieldsStyleElement == null ? this.fieldFilters.getStyle() : '';\n        head.innerHTML += '<style>.chart-engine{display: flex;flex-direction: column;justify-content: center;}</style>';\n    }\n\n    buildController(name, args){\n        ChartEngine.controller(name, args);\n        this.render(name);\n    }\n\n    getDomElements(){\n        let dom = '';\n        dom += `<div id=\"${this.params.elApp}Chart\" ng-init=\"render()\"></div>`;\n        dom += this.dateFilters.render();\n        dom += this.fieldFilters.render();\n        return dom;\n    }\n\n    render(name){\n        let app = document.querySelector('#' + this.params.elApp);\n        app.classList.add('chart-engine');\n        app.innerHTML = this.getDomElements();\n        app.setAttribute('ng-controller', name);\n        angular.bootstrap(app, ['chartEngine']);\n        this.setStyle();\n    }\n\n    setDefaultParams(){\n        this.defaultParams = {\n            credits:{\n                enabled: false\n            },\n             title: {\n                text: this.params.title ? this.params.title : ''\n            },\n\n            subtitle: {\n                text: this.params.subtitle ? this.params.subtitle : ''\n            },\n\n            xAxis:{\n                categories: []\n            },\n\n            yAxis: {\n                title: {\n                    text: this.params.ytitle ? this.params.ytitle : ''\n                },\n                labels: {}\n            },\n            \n            tooltip:{\n\n            },\n\n            legend: {\n                layout: 'vertical',\n                align: 'right',\n                verticalAlign: 'middle'\n            },\n\n            plotOptions: {\n                dataLabels: {\n                    enabled: true\n                }\n            },\n        };\n    }\n\n    setMetrics(){\n        if(this.params.metric){\n            this.defaultParams.yAxis.labels.formatter = Metrics[this.params.metric].yAxis;\n            this.defaultParams.tooltip.formatter = Metrics[this.params.metric].tooltip;\n        }\n    }\n\n    buildChart(elApp, series, type, defaultParams){\n        defaultParams.chart = {type: type};\n        defaultParams.series = series;\n        Highcharts.chart(elApp + 'Chart', defaultParams);\n    }\n\n    getResult(formatData, result){\n        let finalData = result.data.series;\n        if(formatData != undefined)\n            finalData = formatData(result.data.series);\n\n        return finalData;\n    }\n\n    getDefaultParams(defaultParams, result){\n        if(result.data.labels != undefined)\n            defaultParams.xAxis.categories = result.data.labels;\n\n        return defaultParams;\n    }\n\n    getController(){\n        let self = this;\n        return ($scope, $http)=>{\n            \n            $scope = self.fieldFilters.getVariables($scope);\n\n            $scope.dataToSend = {};\n            $scope.dataToSend = self.dateFilters.getParams($scope.dataToSend);\n            $scope.dataToSend = self.fieldFilters.getParams($scope.dataToSend);\n            \n            $scope.getParams = () => {\n               let params = {};\n\n               for(let key in $scope.dataToSend){\n                   if($scope.dataToSend[key] != undefined && $scope.dataToSend[key] != null){\n                       params[key] = $scope.dataToSend[key];\n                   }\n               }\n               \n               return params;\n            };\n\n            $scope.render = ()=>{\n                $http.get(self.endpoint, {\n                    headers: self.httpHeaders,\n                    params: $scope.getParams()\n                }).then((result) => {\n                    self.buildChart(self.params.elApp, self.getResult(self.formatData, result), self.type, self.getDefaultParams(self.defaultParams, result));\n                });\n            }\n        }\n    }\n\n}"]}