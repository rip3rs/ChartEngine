{"version":3,"sources":["../../../src/services/filters/fields.js"],"names":["module","exports","fields","style","$scope","undefined","key","data","dataToSend","defaultValue","el","multiple","alias","dropdown","model","fieldElements","getElement","getDomElement"],"mappings":"wpBAAAA,OAAOC,OAAP,YACI,gBAAYC,MAAZ,CAAmB,8BACf,KAAKA,MAAL,CAAcA,MACjB,CAHL,8DAKc,CACN,GAAIC,OAAQ,0BAAZ,CACIA,OAAS,6DAAT,CACAA,OAAS,kEAAT,CACAA,OAAS,UAAT,CAEJ,MAAOA,MACV,CAZL,kDAciBC,MAdjB,CAcwB,CAChB,GAAG,KAAKF,MAAL,EAAeG,SAAlB,CAA4B,CACxB,IAAI,GAAIC,IAAR,GAAe,MAAKJ,MAApB,CAA2B,CACvBE,OAAOE,GAAP,EAAc,KAAKJ,MAAL,CAAYI,GAAZ,EAAiBC,IAClC,EACJ,CAED,MAAOH,OACV,CAtBL,4CAwBcI,UAxBd,CAwByB,CACjB,GAAG,KAAKN,MAAL,EAAeG,SAAlB,CAA4B,CACxB,IAAI,GAAIC,IAAR,GAAe,MAAKJ,MAApB,CAA2B,CACvBM,WAAWF,GAAX,EAAkB,KAAKJ,MAAL,CAAYI,GAAZ,EAAiBG,YAAjB,CAAgC,KAAKP,MAAL,CAAYI,GAAZ,EAAiBG,YAAjD,CAAgE,IACrF,EACJ,CAED,MAAOD,WACV,CAhCL,8CAkCeE,EAlCf,CAkCmBJ,GAlCnB,CAkCuB,CACf,GAAIK,UAAWD,GAAGC,QAAH,CAAc,UAAd,CAA2B,EAA1C,CACA,GAAIC,OAAQF,GAAGE,KAAH,CAAWF,GAAGE,KAAd,CAAsBN,GAAlC,CACA,GAAIO,kFAAmFD,KAAnF,mCAA0HN,GAA1H,gDAA4KA,GAA5K,MAAoLK,QAApL,yBAAoNC,KAApN,wDAAgRN,GAAhR,gFAAJ,CAEA,MAAOO,SACV,CAxCL,oDA0CkBC,KA1ClB,CA0CwB,CAChB,GAAIC,eAAgB,EAApB,CACA,IAAI,GAAIT,IAAR,GAAe,MAAKJ,MAApB,CAA2B,CACvBa,eAAiB,KAAKC,UAAL,CAAgB,KAAKd,MAAL,CAAYI,GAAZ,CAAhB,CAAkCA,GAAlC,CACpB,CAED,MAAO,qCAAuCS,aAAvC,CAAuD,QACjE,CAjDL,uCAmDY,CACJ,MAAO,MAAKb,MAAL,GAAgBG,SAAhB,CAA4B,EAA5B,CAAiC,KAAKY,aAAL,EAC3C,CArDL","file":"fields.js","sourcesContent":["module.exports = class Fields{\n    constructor(fields){\n        this.fields = fields;\n    }\n\n    getStyle(){\n        let style = '<style id=\"fieldsStyle\">';\n            style += ' .md-select-value .md-select-icon:after{content: \"\\\\25BC\"} ';\n            style += ' .chart-engine-filters{margin-left: 8px; display:inline-block;} ';\n            style += '</style>';\n\n        return style;\n    }\n\n    getVariables($scope){\n        if(this.fields != undefined){\n            for(let key in this.fields){\n                $scope[key] = this.fields[key].data;\n            };\n        }\n\n        return $scope;\n    }\n\n    getParams(dataToSend){\n        if(this.fields != undefined){\n            for(let key in this.fields){\n                dataToSend[key] = this.fields[key].defaultValue ? this.fields[key].defaultValue : null;\n            };\n        }\n        \n        return dataToSend;\n    }\n\n    getElement(el, key){\n        let multiple = el.multiple ? 'multiple' : '';\n        let alias = el.alias ? el.alias : key;\n        let dropdown = `<md-input-container style=\"min-width: 150px;max-width: 100%;\"><label>${alias}</label><md-select aria-label=\"${key}\" ng-change=\"render()\" ng-model=\"dataToSend.${key}\" ${multiple}><md-optgroup label=\"${alias}\"><md-option ng-value=\"item.key\" ng-repeat=\"item in ${key}\">{[{item.value}]}</md-option></md-optgroup></md-select></md-input-container>`;\n\n        return dropdown;\n    }\n\n    getDomElement(model){\n        let fieldElements = '';\n        for(let key in this.fields){\n            fieldElements += this.getElement(this.fields[key], key);\n        }\n\n        return '<div class=\"chart-engine-filters\">' + fieldElements + '</div>';\n    }\n\n    render(){\n        return this.fields === undefined ? '' : this.getDomElement();\n    }\n}\n"]}